{"file":[{"name":"hello-world-groovy/Dockerfile","type":"Dockerfile","content":"FROM adoptopenjdk/openjdk11-openj9:jdk-11.0.1.13-alpine-slim\nCOPY build/libs/example-*-all.jar example.jar\nEXPOSE 8080\nCMD java -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -Dcom.sun.management.jmxremote -noverify ${JAVA_OPTS} -jar example.jar"},{"name":"hello-world-java/Dockerfile","type":"Dockerfile","content":"FROM adoptopenjdk/openjdk11-openj9:jdk-11.0.1.13-alpine-slim\nCOPY build/libs/example-*-all.jar example.jar\nEXPOSE 8080\nCMD java -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -Dcom.sun.management.jmxremote -noverify ${JAVA_OPTS} -jar example.jar"},{"name":"hello-world-kotlin/Dockerfile","type":"Dockerfile","content":"FROM adoptopenjdk/openjdk11-openj9:jdk-11.0.1.13-alpine-slim\nCOPY build/libs/example-*-all.jar example.jar\nEXPOSE 8080\nCMD java -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -Dcom.sun.management.jmxremote -noverify ${JAVA_OPTS} -jar example.jar"},{"name":"hello-world-lambda/Dockerfile","type":"Dockerfile","content":"FROM openjdk:8-jre-alpine\n\nRUN addgroup -S app \u0026\u0026 adduser -S -g app app\n\nWORKDIR /app\nCOPY build/libs/*-all.jar /app/Handler.jar\n\nRUN apk --no-cache add curl \\\n    \u0026\u0026 echo \"Pulling watchdog binary from Github.\" \\\n    \u0026\u0026 curl -sSL https://github.com/openfaas/faas/releases/download/0.8.0/fwatchdog \u003e /usr/bin/fwatchdog \\\n    \u0026\u0026 chmod +x /usr/bin/fwatchdog \\\n    \u0026\u0026 cp /usr/bin/fwatchdog /home/app \\\n    \u0026\u0026 apk del curl --no-cache\n\nUSER app\n\nENV fprocess=\"xargs java -noverify -XX:TieredStopAtLevel=1 -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -jar Handler.jar -d\"\n\nHEALTHCHECK --interval=1s CMD [ -e /tmp/.lock ] || exit 1\n\nCMD [\"fwatchdog\"]\n"},{"name":"petstore/comments/Dockerfile","type":"Dockerfile","content":"FROM java:openjdk-8u111-alpine\nRUN apk --no-cache add curl\nCMD ./wait-for -t 300 $CONSUL_HOST:$CONSUL_PORT -- \\\n        ./wait-for -t 300 $NEO4J_HOST:$NEO4J_PORT -- \\\n        echo \"All dependencies ready. Starting application...\" \u0026\u0026 \\\n        java ${JAVA_OPTS} -jar comments-all.jar\nCOPY build/libs/*-all.jar comments-all.jar\nCOPY wait-for wait-for"},{"name":"petstore/frontend/react/Dockerfile","type":"Dockerfile","content":"FROM node:latest\n\nRUN mkdir -p /usr/src/app\nWORKDIR /usr/src/app\n\nCOPY package.json /usr/src/app/\nRUN npm install\n\nCMD [ \"npm\", \"start\" ]"},{"name":"petstore/mail/Dockerfile","type":"Dockerfile","content":"FROM java:openjdk-8u111-alpine\nRUN apk --no-cache add curl\nCMD ./wait-for -t 300 $CONSUL_HOST:$CONSUL_PORT -- \\\n    echo \"All dependencies ready. Starting application...\" \u0026\u0026 \\\n    java ${JAVA_OPTS} -jar mail-all.jar\nCOPY build/libs/*-all.jar mail-all.jar\nCOPY wait-for wait-for"},{"name":"petstore/offers/Dockerfile","type":"Dockerfile","content":"FROM java:openjdk-8u111-alpine\nRUN apk --no-cache add curl\nCMD ./wait-for -t 300 $CONSUL_HOST:$CONSUL_PORT -- \\\n        ./wait-for -t 300 $REDIS_HOST:$REDIS_PORT -- \\\n        ./wait-for -t 300 pets:8080 -- \\\n        ./wait-for -t 300 storefront:8080 -- \\\n        echo \"All dependencies ready. Starting application...\" \u0026\u0026 \\\n        java ${JAVA_OPTS} -jar offers-all.jar\nCOPY build/libs/*-all.jar offers-all.jar\nCOPY wait-for wait-for"},{"name":"petstore/pets/Dockerfile","type":"Dockerfile","content":"FROM java:openjdk-8u111-alpine\nRUN apk --no-cache add curl\nCMD ./wait-for -t 300 $CONSUL_HOST:$CONSUL_PORT -- \\\n        ./wait-for -t 300 $MONGO_HOST:$MONGO_PORT -- \\\n        echo \"All dependencies ready. Starting application...\" \u0026\u0026 \\\n        java ${JAVA_OPTS} -jar pets-all.jar\nCOPY build/libs/*-all.jar pets-all.jar\nCOPY wait-for wait-for"},{"name":"petstore/storefront/Dockerfile","type":"Dockerfile","content":"FROM java:openjdk-8u111-alpine\nRUN apk --no-cache add curl\nCMD ./wait-for -t 300 $CONSUL_HOST:$CONSUL_PORT -- \\\n        ./wait-for -t 300 pets:8080 -- \\\n        ./wait-for -t 300 vendors:8080 -- \\\n        ./wait-for -t 300 comments:8080 -- \\\n        echo \"All dependencies ready. Starting application...\" \u0026\u0026 \\\n        java ${JAVA_OPTS} -jar storefront-all.jar\nCOPY build/libs/*-all.jar storefront-all.jar\nCOPY wait-for wait-for"},{"name":"petstore/vendors/Dockerfile","type":"Dockerfile","content":"FROM java:openjdk-8u111-alpine\nRUN apk --no-cache add curl\nCMD ./wait-for -t 300 $CONSUL_HOST:$CONSUL_PORT -- \\\n        echo \"All dependencies ready. Starting application...\" \u0026\u0026 \\\n        java ${JAVA_OPTS} -jar vendors-all.jar\nCOPY build/libs/*-all.jar vendors-all.jar\nCOPY wait-for wait-for\n"},{"name":"websocket-chat/Dockerfile","type":"Dockerfile","content":"FROM openjdk:8u171-alpine3.7\nRUN apk --no-cache add curl\nCOPY build/libs/*-all.jar websocket-chat.jar\nCMD java ${JAVA_OPTS} -jar websocket-chat.jar"}]}
