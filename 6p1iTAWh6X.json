{"file":[{"name":"main.tf","type":"Terraform","extension":"HCL","output_policy":"msg: policy applied successfully","applied_policy":"config/default.rego","content":"# Configure the AWS Provider\nprovider \"aws\" {\n  region = \"us-east-2\"\n}\n\n# This shows an example of how to use a Terraform module.\n\nmodule \"example_rails_app_stage\" {\n  # The source field can be a path on your file system or a Git URL (even a versioned one!)\n  source = \"./rails-module\"\n\n  # Pass parameters to the module\n  name          = \"Example Rails App (Stage)\"\n  port          = 3000\n  ami           = var.ami\n  key_pair_name = var.key_pair_name\n}\n\nmodule \"example_rails_app_prod\" {\n  # The source field can be a path on your file system or a Git URL (even a versioned one!)\n  source = \"./rails-module\"\n\n  # Pass parameters to the module\n  name          = \"Example Rails App\"\n  port          = 8080\n  ami           = var.ami\n  key_pair_name = var.key_pair_name\n}\n"},{"name":"outputs.tf","type":"Terraform","extension":"HCL","output_policy":"msg: policy applied successfully","applied_policy":"config/default.rego","content":"# Output EC2 instance URL from the example_rails_app_stage module\noutput \"stage_url\" {\n  value = module.example_rails_app_stage.url\n}\n\n# Output EC2 instance URL from the example_rails_app_prod module\noutput \"prod_url\" {\n  value = module.example_rails_app_prod.url\n}\n"},{"name":"rails-module/main.tf","type":"Terraform","extension":"HCL","output_policy":"msg: policy applied successfully","applied_policy":"config/default.rego","content":"# Create an EC2 instance\nresource \"aws_instance\" \"example_rails_app\" {\n  ami             = var.ami\n  instance_type   = \"t3.micro\"\n  security_groups = [aws_security_group.example_rails_app.name]\n  user_data       = data.template_file.user_data.rendered\n  key_name        = var.key_pair_name\n\n  tags = {\n    Name = var.name\n  }\n}\n\n# A User Data script that will run when the EC2 instance boots up and start the Ruby on Rails server\ndata \"template_file\" \"user_data\" {\n  template = file(\"${path.module}/user-data.sh\")\n\n  vars = {\n    port = var.port\n  }\n}\n\n# A Security Group that controls what network traffic can go in and out of the EC2 instance\nresource \"aws_security_group\" \"example_rails_app\" {\n  name        = var.name\n  description = \"A Security Group for ${var.name}\"\n\n  # Inbound HTTP from anywhere\n  ingress {\n    from_port   = var.port\n    to_port     = var.port\n    protocol    = \"tcp\"\n    cidr_blocks = [\"0.0.0.0/0\"]\n  }\n\n  # Inbound SSH from anywhere\n  ingress {\n    from_port   = 22\n    to_port     = 22\n    protocol    = \"tcp\"\n    cidr_blocks = [\"0.0.0.0/0\"]\n  }\n\n  # Outbound everything\n  egress {\n    from_port   = 0\n    to_port     = 0\n    protocol    = \"-1\"\n    cidr_blocks = [\"0.0.0.0/0\"]\n  }\n}\n"},{"name":"rails-module/outputs.tf","type":"Terraform","extension":"HCL","output_policy":"msg: policy applied successfully","applied_policy":"config/default.rego","content":"# Output the URL of the EC2 instance after the templates are applied\noutput \"url\" {\n  value = \"http://${aws_instance.example_rails_app.public_ip}:${var.port}\"\n}\n"},{"name":"rails-module/vars.tf","type":"Terraform","extension":"HCL","output_policy":"msg: policy applied successfully","applied_policy":"config/default.rego","content":"variable \"name\" {\n  description = \"The name used to namespace resources created by this module\"\n  type        = string\n}\n\nvariable \"ami\" {\n  description = \"The ID of the AMI that has Ruby on Rails installed and contains the code from the example-rails-app\"\n  type        = string\n}\n\nvariable \"key_pair_name\" {\n  description = \"The name of a Key Pair that you've created in AWS and have saved on your computer. You will be able to use this Key Pair to SSH to the EC2 instance.\"\n  type        = string\n}\n\nvariable \"port\" {\n  description = \"The port the Ruby on Rails app should listen on for HTTP requests\"\n  type        = number\n}\n"},{"name":"vars.tf","type":"Terraform","extension":"HCL","output_policy":"msg: policy applied successfully","applied_policy":"config/default.rego","content":"# ---------------------------------------------------------------------------------------------------------------------\n# ENVIRONMENT VARIABLES\n# Define these secrets as environment variables\n# ---------------------------------------------------------------------------------------------------------------------\n\n# AWS_ACCESS_KEY_ID\n# AWS_SECRET_ACCESS_KEY\n\n# ---------------------------------------------------------------------------------------------------------------------\n# MODULE PARAMETERS\n# These variables are expected to be passed in by the operator\n# ---------------------------------------------------------------------------------------------------------------------\n\nvariable \"ami\" {\n  description = \"The ID of the AMI that has Ruby on Rails installed and contains the code from the example-rails-app\"\n  type        = string\n}\n\nvariable \"key_pair_name\" {\n  description = \"The name of a Key Pair that you've created in AWS and have saved on your computer. You will be able to use this Key Pair to SSH to the EC2 instance.\"\n  type        = string\n}\n"}]}
